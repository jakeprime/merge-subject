name: Lock merge queue state
runs:
  using: composite
  # steps:
  #   - name: Checkout merge-queue-state branch
  #     uses: actions/checkout@v4
  #     with:
  #       ref: merge-queue-state
  steps:
    - name: Create lock
      env:
        GH_TOKEN: ${{ github.token }}
      shell: bash
      run: |
        set -euo pipefail

        WORK_BRANCH=merge-lock-$GITHUB_RUN_ID

        git checkout merge-queue-state

        for i in {1..10}; do
          git fetch origin merge-queue-state
          if git ls-tree --name-only origin/merge-queue-state lock | grep -q 'lock'; then
            echo "State is locked"
          else
            git checkout merge-queue-state
            echo "$GITHUB_RUN_ID" > lock
            git add lock
            git commit -m "Locking merge queue state"

            # this will fail if another runner has pushed a lock in the meantime
            if git push; then
              exit 0
            else
              git reset --hard HEAD~1
            fi
          fi

          sleep 5
        done

        echo "Failed to get lock on merge state"
        exit 1
